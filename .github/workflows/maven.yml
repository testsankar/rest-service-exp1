# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven - Rest-exp1

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Setup Maven settings.xml
      uses: whelk-io/maven-settings-xml-action@v11
      with:
        servers: |
          [{
          "id": "artifactory",
          "username": "${env.ARTIFACTORY_USERNAME_REF}",
          "password": "${env.ARTIFACTORY_TOKEN_REF}"
          }]
    - name: Build with Maven
      env:
        ARTIFACTORY_USERNAME_REF: ${{ secrets.JF_USER }}
        ARTIFACTORY_TOKEN_REF: ${{ secrets.JF_ACCESS_TOKEN }}
        BUILD_ENV: 'github-actions'
      run: mvn -B package --file pom.xml
    - uses: jfrog/setup-jfrog-cli@v2
      env:
        JF_URL: ${{ secrets.JF_URL }}
        JF_USER: ${{ secrets.JF_USER }}
        JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
    - run: |
        jf rt ping
      
